# coding: utf-8

"""
    Clerk Backend API

    The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).   Please see https://clerk.com/docs for more information.

    The version of the OpenAPI document: v1
    Contact: support@clerk.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from clerk_backend_sdk.api.users_api import UsersApi


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UsersApi()

    def tearDown(self) -> None:
        pass

    def test_ban_user(self) -> None:
        """Test case for ban_user

        Ban a user
        """
        pass

    def test_create_user(self) -> None:
        """Test case for create_user

        Create a new user
        """
        pass

    def test_delete_user(self) -> None:
        """Test case for delete_user

        Delete a user
        """
        pass

    def test_delete_user_profile_image(self) -> None:
        """Test case for delete_user_profile_image

        Delete user profile image
        """
        pass

    def test_disable_mfa(self) -> None:
        """Test case for disable_mfa

        Disable a user's MFA methods
        """
        pass

    def test_get_o_auth_access_token(self) -> None:
        """Test case for get_o_auth_access_token

        Retrieve the OAuth access token of a user
        """
        pass

    def test_get_user(self) -> None:
        """Test case for get_user

        Retrieve a user
        """
        pass

    def test_get_user_list(self) -> None:
        """Test case for get_user_list

        List all users
        """
        pass

    def test_get_users_count(self) -> None:
        """Test case for get_users_count

        Count users
        """
        pass

    def test_lock_user(self) -> None:
        """Test case for lock_user

        Lock a user
        """
        pass

    def test_set_user_profile_image(self) -> None:
        """Test case for set_user_profile_image

        Set user profile image
        """
        pass

    def test_unban_user(self) -> None:
        """Test case for unban_user

        Unban a user
        """
        pass

    def test_unlock_user(self) -> None:
        """Test case for unlock_user

        Unlock a user
        """
        pass

    def test_update_user(self) -> None:
        """Test case for update_user

        Update a user
        """
        pass

    def test_update_user_metadata(self) -> None:
        """Test case for update_user_metadata

        Merge and update a user's metadata
        """
        pass

    def test_users_get_organization_memberships(self) -> None:
        """Test case for users_get_organization_memberships

        Retrieve all memberships for a user
        """
        pass

    def test_verify_password(self) -> None:
        """Test case for verify_password

        Verify the password of a user
        """
        pass

    def test_verify_totp(self) -> None:
        """Test case for verify_totp

        Verify a TOTP or backup code for a user
        """
        pass


if __name__ == '__main__':
    unittest.main()
