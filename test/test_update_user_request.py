# coding: utf-8

"""
    Clerk Backend API

    The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).   Please see https://clerk.com/docs for more information.

    The version of the OpenAPI document: v1
    Contact: support@clerk.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from clerk_backend_sdk.models.update_user_request import UpdateUserRequest

class TestUpdateUserRequest(unittest.TestCase):
    """UpdateUserRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateUserRequest:
        """Test UpdateUserRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateUserRequest`
        """
        model = UpdateUserRequest()
        if include_optional:
            return UpdateUserRequest(
                external_id = '',
                first_name = '',
                last_name = '',
                primary_email_address_id = '',
                notify_primary_email_address_changed = True,
                primary_phone_number_id = '',
                primary_web3_wallet_id = '',
                username = '',
                profile_image_id = '',
                password = '',
                password_digest = '',
                password_hasher = 'argon2i',
                skip_password_checks = True,
                sign_out_of_other_sessions = True,
                totp_secret = '',
                backup_codes = [
                    ''
                    ],
                public_metadata = None,
                private_metadata = None,
                unsafe_metadata = None,
                delete_self_enabled = True,
                create_organization_enabled = True,
                create_organizations_limit = 56,
                created_at = ''
            )
        else:
            return UpdateUserRequest(
        )
        """

    def testUpdateUserRequest(self):
        """Test UpdateUserRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
