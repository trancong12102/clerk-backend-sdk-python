# coding: utf-8

"""
    Clerk Backend API

    The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).   Please see https://clerk.com/docs for more information.

    The version of the OpenAPI document: v1
    Contact: support@clerk.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from clerk_backend_sdk.api.allow_list_block_list_api import AllowListBlockListApi


class TestAllowListBlockListApi(unittest.TestCase):
    """AllowListBlockListApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AllowListBlockListApi()

    def tearDown(self) -> None:
        pass

    def test_create_allowlist_identifier(self) -> None:
        """Test case for create_allowlist_identifier

        Add identifier to the allow-list
        """
        pass

    def test_create_blocklist_identifier(self) -> None:
        """Test case for create_blocklist_identifier

        Add identifier to the block-list
        """
        pass

    def test_delete_allowlist_identifier(self) -> None:
        """Test case for delete_allowlist_identifier

        Delete identifier from allow-list
        """
        pass

    def test_delete_blocklist_identifier(self) -> None:
        """Test case for delete_blocklist_identifier

        Delete identifier from block-list
        """
        pass

    def test_list_allowlist_identifiers(self) -> None:
        """Test case for list_allowlist_identifiers

        List all identifiers on the allow-list
        """
        pass

    def test_list_blocklist_identifiers(self) -> None:
        """Test case for list_blocklist_identifiers

        List all identifiers on the block-list
        """
        pass


if __name__ == '__main__':
    unittest.main()
